/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.GovtRolePanel;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.ExpertOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HealthReportRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Aastha
 */
public class MessageJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MessageJPanel
     */
   private JPanel container;
    private Network network;
    private UserAccount account;
    public MessageJPanel(JPanel container , UserAccount account, Network network) {
        initComponents();
        this.container = container;
        this.network = network;
        this.account = account;
        populateComboBox();
        populateTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        orgJComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        messageTxt = new javax.swing.JTextArea();
        sendMsgBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        jPanel1.setMinimumSize(new java.awt.Dimension(1530, 770));
        jPanel1.setName(""); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        jLabel1.setText("Receiver :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 380, -1, -1));

        orgJComboBox.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        orgJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgJComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(orgJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 380, 239, -1));

        messageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Receiver", "Status", "Message", "Response"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(messageTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 157, 1061, 180));

        messageTxt.setColumns(20);
        messageTxt.setRows(5);
        jScrollPane2.setViewportView(messageTxt);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 460, 435, 60));

        sendMsgBtn.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        sendMsgBtn.setText("Send Message");
        sendMsgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMsgBtnActionPerformed(evt);
            }
        });
        jPanel1.add(sendMsgBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 460, -1, 60));

        backBtn.setBackground(new java.awt.Color(0, 153, 153));
        backBtn.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        jPanel1.add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, 110, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1575, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 762, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sendMsgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMsgBtnActionPerformed
        // TODO add your handling code here:

              String message = messageTxt.getText().trim();
        
        if(!message.isEmpty()){
        

//            HealthReportRequest wr = new HealthReportRequest();

        Organization org = (Organization) orgJComboBox.getSelectedItem();
       
        
        

        
        if(org instanceof DoctorOrganization){
         HealthReportRequest hr = new HealthReportRequest();
            hr.setSender(account);
        hr.setMessage(message);
            org.getWorkQueue().getWorkRequestList().add(hr);
            account.getWorkQueue().getWorkRequestList().add((WorkRequest)hr);
        }
        else if(org instanceof ExpertOrganization){
                    WorkRequest wr  = new WorkRequest();
                                wr.setSender(account);
        wr.setMessage(message);
            org.getWorkQueue().getWorkRequestList().add(wr);
                    account.getWorkQueue().getWorkRequestList().add(wr);
        }
        
        
                
        }
        else{
            JOptionPane.showMessageDialog(null, "Enter message text", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        populateTable();

    }//GEN-LAST:event_sendMsgBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed

    private void orgJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgJComboBoxActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_orgJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable messageTable;
    private javax.swing.JTextArea messageTxt;
    private javax.swing.JComboBox orgJComboBox;
    private javax.swing.JButton sendMsgBtn;
    // End of variables declaration//GEN-END:variables
 private void populateComboBox() {
    //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        for(Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()){
            for(Organization org : ent.getOrganizationDirectory().getOrganizationList()){
                if(org instanceof DoctorOrganization || org instanceof ExpertOrganization){
                    orgJComboBox.addItem(org);
                }
            }
        }
    }

    private void populateTable() {
   //     throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
        Organization org = (Organization) orgJComboBox.getSelectedItem();
        
        DefaultTableModel model = (DefaultTableModel) messageTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[5];
        
        if(org instanceof DoctorOrganization){
 
            Iterator<WorkRequest> it = org.getWorkQueue().getWorkRequestList().iterator(); 
             while(it.hasNext()) {
            WorkRequest wr = it.next();
            String roletype = wr.getSender().getRole().toString();
            if(roletype.equalsIgnoreCase("GovernmentRole")){
             HealthReportRequest hr =(HealthReportRequest) wr;
         
            row[0] = hr.getSender();
            row[1] = hr.getReceiver();
            row[2] = hr;
            row[3] = hr.getMessage();
            row[4] = hr.getResponse();
            model.addRow(row);
            }
        }
        }
        else if(org instanceof ExpertOrganization){
        for(WorkRequest wr : org.getWorkQueue().getWorkRequestList()){
            String roletype = wr.getSender().getRole().toString();
            if(roletype.equalsIgnoreCase("GovernmentRole")){
            
            row[0] = wr.getSender();
            row[1] = wr.getReceiver();
            row[2] = wr;
            row[3] = wr.getMessage();
            row[4] = wr.getResponse();
            model.addRow(row);
            }
        }
        }
    
    }}

